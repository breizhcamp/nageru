Nageru 1.3.0, not released yet

 - It is now possible, given enough CPU power (e.g., a quad-core Haswell or
   faster desktop CPU), to output a stream that is suitable for streaming
   directly to end users without further transcoding. In particular, this
   includes support for encoding the network stream with x264 (the stream
   saved to disk is still done using Quick Sync), for Metacube framing (for
   streaming to the Cubemap reflector), and for choosing the network stream
   mux. For more information, see the README.

 - Add a flag (--disable-alsa-output) to disable ALSA monitoring output.

 - Do texture uploads from the main thread instead of from separate threads;
   may or may not improve stability with NVIDIA's proprietary drivers.

 - When beginning a new video segment, the shutdown of the old encoder
   is now done in a background thread, in order to not disturb the external
   stream. The audio still goes into a somewhat random stream, though.

 - You can now override the default stream-to-card mapping with --map-signal=
   on the command line.

 - Nageru now tries to lock itself into RAM if it has the permissions to do
   so, for better realtime behavior. (Writing the stream to disk tends to
   fill the buffer cache, eventually paging less-used parts of Nageru out.)

 - Various fixes for deadlocks, memory leaks, and many other errors.


Nageru 1.2.1, April 15th, 2016

 - Images are now updated from disk about every second, so that it is possible
   to update e.g. overlays during streaming, although somewhat slowly.

 - Fix support for PNG images.

 - You can now send SIGHUP to start a new cut instead of using the menu.

 - Added a --help option.

 - Various tweaks to OpenGL fence handling.


Nageru 1.2.0, April 6th, 2016

 - Support for Blackmagic's PCI and Thunderbolt cards, using the official
   (closed-source) Blackmagic drivers. (You do not need the SDK installed, though.)
   You can use PCI and USB cards pretty much interchangeably.

 - Much more stable handling of frame queues on non-master cards. In particular,
   you can have a master card on 50 Hz and another card on 60 Hz without getting
   lots of warning messages and a 10+ frame latency on the second card.

 - Many new options in the right click menu on cards: Adjustable video inputs,
   adjustable audio inputs, adjustable resolutions, ability to select card for
   master clock.

 - Add support for starting with almost all audio processing turned off
   (--flat-audio).

 - The UI now marks inputs with red or green to mark them as participating in
   the live or preview signal, respectively. Red takes priority. (Actually,
   it merely asks the theme for a color for each input; the theme contains
   the logic.)

 - Add support for uncompressed video instead of H.264 on the HTTP server,
   while still storing H.264 to files (--http-uncompressed-video). Note that
   depending on your client, this might not actually be more CPU efficient
   even on localhost, so be sure to check.

 - Add a simpler, less featureful theme (simple.lua) that should be easier to
   understand for beginners. Themes are now also choosable with -t on the command
   line.

 - Too many bugfixes and small tweaks to list. In particular, many memory leaks
   in the streaming part have been identified and fixed.


Nageru 1.1.0, February 24th, 2016

 - Support doing the H.264 encoding on a different graphics device from the one
   doing the mixing. In particular, this makes it possible to use Nageru on an
   NVIDIA GPU while still encoding H.264 video using Intel Quick Sync (NVENC
   is not supported yet) -- it is less efficient since the data needs to be read
   back via the CPU, but the NVIDIA cards and drivers are so much faster that it
   doesn't really matter. Tested on a GTX 950 with the proprietary drivers.

 - In the included example theme, fix fading to/from deinterlaced sources.

 - Various smaller compilation, distribution and documentation fixes.


Nageru 1.0.0, January 30th, 2016

 - Initial release.
