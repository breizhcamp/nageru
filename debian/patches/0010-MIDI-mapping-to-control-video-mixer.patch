From: Yoann Dubreuil <yoann.dubreuil@gmail.com>
Date: Sat, 23 Feb 2019 15:40:58 +0100
Subject: MIDI mapping to control video mixer

---
 nageru/midi_mapper.cpp           | 8 ++++++++
 nageru/midi_mapper.h             | 2 ++
 nageru/midi_mapping_dialog.cpp   | 6 ++++++
 nageru/midi_mapping_dialog.h     | 3 +++
 nageru/nageru_midi_mapping.proto | 4 ++++
 5 files changed, 23 insertions(+)

diff --git a/nageru/midi_mapper.cpp b/nageru/midi_mapper.cpp
index d0a42ec..1f93906 100644
--- a/nageru/midi_mapper.cpp
+++ b/nageru/midi_mapper.cpp
@@ -163,6 +163,14 @@ void MIDIMapper::note_on_received(int note)
 			update_highlights();
 			update_lights_lock_held();
 		}
+		if (bus_mapping.has_video_channel() &&
+		    bus_mapping.video_channel().note_number() == note ) {
+			receiver->channel_clicked(bus_idx);
+		}
+		if (bus_mapping.has_video_transition() &&
+		    bus_mapping.video_transition().note_number() == note ) {
+			receiver->transition_clicked(bus_idx);
+		}
 	}
 
 	match_button(note, MIDIMappingBusProto::kToggleLocutFieldNumber, MIDIMappingProto::kToggleLocutBankFieldNumber,
diff --git a/nageru/midi_mapper.h b/nageru/midi_mapper.h
index dd5c7ab..ee7c487 100644
--- a/nageru/midi_mapper.h
+++ b/nageru/midi_mapper.h
@@ -46,6 +46,8 @@ public:
 	virtual void clear_peak(unsigned bus_idx) = 0;
 	virtual void toggle_limiter() = 0;
 	virtual void toggle_auto_makeup_gain() = 0;
+	virtual void transition_clicked(int transition_number) = 0;
+	virtual void channel_clicked(int channel_number) = 0;
 
 	// Signals to highlight controls to mark them to the user
 	// as MIDI-controllable (or not).
diff --git a/nageru/midi_mapping_dialog.cpp b/nageru/midi_mapping_dialog.cpp
index d27a0c2..9cb1d71 100644
--- a/nageru/midi_mapping_dialog.cpp
+++ b/nageru/midi_mapping_dialog.cpp
@@ -88,6 +88,11 @@ vector<MIDIMappingDialog::Control> global_lights = {
 	{ "Auto makeup gain is on",   MIDIMappingBusProto::kAutoMakeupGainIsOnFieldNumber, 0 },
 };
 
+vector<MIDIMappingDialog::Control> global_video = {
+	{ "Channel is selected",    MIDIMappingBusProto::kVideoChannelFieldNumber, 0 },
+	{ "Transition is clicked",  MIDIMappingBusProto::kVideoTransitionFieldNumber, 0 },
+};
+
 namespace {
 
 int get_bank(const MIDIMappingProto &mapping_proto, int bank_field_number, int default_value)
@@ -165,6 +170,7 @@ MIDIMappingDialog::MIDIMappingDialog(MIDIMapper *mapper)
 	add_controls("Global controllers", ControlType::CONTROLLER, SpinnerGroup::GLOBAL_CONTROLLERS, mapping_proto, global_controllers);
 	add_controls("Global buttons", ControlType::BUTTON, SpinnerGroup::GLOBAL_BUTTONS, mapping_proto, global_buttons);
 	add_controls("Global lights", ControlType::LIGHT, SpinnerGroup::GLOBAL_LIGHTS, mapping_proto, global_lights);
+	add_controls("Video mixing", ControlType::LIGHT, SpinnerGroup::GLOBAL_LIGHTS, mapping_proto, global_video);
 	fill_controls_from_mapping(mapping_proto);
 
 	// Auto-resize every column but the last.
diff --git a/nageru/midi_mapping_dialog.h b/nageru/midi_mapping_dialog.h
index c36781d..19cbf01 100644
--- a/nageru/midi_mapping_dialog.h
+++ b/nageru/midi_mapping_dialog.h
@@ -85,6 +85,9 @@ public:
 	void highlight_toggle_limiter(bool highlight) override {}
 	void highlight_toggle_auto_makeup_gain(bool highlight) override {}
 
+	void transition_clicked(int transition_number) override {}
+	void channel_clicked(int channel_number) override {}
+
 	// Raw events; used for the editor dialog only.
 	void controller_changed(unsigned controller) override;
 	void note_on(unsigned note) override;
diff --git a/nageru/nageru_midi_mapping.proto b/nageru/nageru_midi_mapping.proto
index 6eb8001..07e3660 100644
--- a/nageru/nageru_midi_mapping.proto
+++ b/nageru/nageru_midi_mapping.proto
@@ -64,6 +64,10 @@ message MIDIMappingBusProto {
 	optional MIDILightProto bank_5_is_selected = 34;
 	optional MIDILightProto limiter_is_on = 35;
 	optional MIDILightProto auto_makeup_gain_is_on = 36;
+
+	// Video mixing
+	optional MIDIButtonProto video_channel = 100;
+	optional MIDIButtonProto video_transition = 110;
 }
 
 // The top-level protobuf, containing all the bus mappings, as well as
